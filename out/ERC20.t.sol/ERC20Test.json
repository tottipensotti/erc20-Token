{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_balanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_name",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_totalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_trasferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "167:2009:18:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3288:44:3;;;;;;;;;;;167:2009:18;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "167:2009:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;219:82;;;:::i;:::-;;583:165;;;:::i;2161:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;307:80:18;;;:::i;2930:133:6:-;;;:::i;2631:141::-;;;:::i;1565:609:18:-;;;:::i;393:92::-;;;:::i;2447:178:6:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;955:406:18:-;;;:::i;1367:192::-;;;:::i;1866:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3753:14:19;;3746:22;3728:41;;3716:2;3701:18;1819:584:0;3588:187:19;754:195:18;;;:::i;491:86::-;;;:::i;2013:142:6:-;;;:::i;1572:26:0:-;;;;;;;;;219:82:18;291:2;263:31;;;;;:::i;:::-;4118:2:19;4100:21;;;4157:1;4137:18;;;4130:29;-1:-1:-1;;;4190:3:19;4175:19;;4168:38;4244:3;4237:4;4222:20;;4215:33;;;4285:1;4264:19;;;4257:30;-1:-1:-1;;;4318:3:19;4303:19;;4296:34;4414:4;4402:17;;;-1:-1:-1;4382:18:19;;4375:45;4362:3;4347:19;263:31:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;253:7:18;:41;;-1:-1:-1;;;;;;253:41:18;-1:-1:-1;;;;;253:41:18;;;;;;;;;;219:82::o;583:165::-;621:11;635:15;;;;;;;;;;;;;;-1:-1:-1;;;635:15:18;;;:8;:15::i;:::-;660:7;;:28;;-1:-1:-1;;;660:28:18;;621:29;;-1:-1:-1;;;;;;660:7:18;;:12;;:28;;621:29;;678:9;;660:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;707:7:18;;:22;;-1:-1:-1;;;707:22:18;;-1:-1:-1;;;;;4902:32:19;;;707:22:18;;;4884:51:19;698:43:18;;-1:-1:-1;707:7:18;;;;-1:-1:-1;707:17:18;;4857:18:19;;707:22:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;731:9;698:8;:43::i;:::-;611:137;583:165::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;307:80:18:-;354:7;;:14;;;-1:-1:-1;;;354:14:18;;;;345:35;;-1:-1:-1;;;;;354:7:18;;:12;;:14;;;;;:7;;:14;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;354:14:18;;;;;;;;;;;;:::i;:::-;345:35;;;;;;;;;;;;;-1:-1:-1;;;345:35:18;;;:8;:35::i;:::-;307:80::o;2930:133:6:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;1565:609:18:-;1610:12;1625:16;;;;;;;;;;;;;;-1:-1:-1;;;1625:16:18;;;:8;:16::i;:::-;1610:31;;1651:16;1670:20;;;;;;;;;;;;;;-1:-1:-1;;;1670:20:18;;;:8;:20::i;:::-;1651:39;;1700:12;1715:16;;;;;;;;;;;;;;-1:-1:-1;;;1715:16:18;;;:8;:16::i;:::-;1755:7;;1700:31;;-1:-1:-1;1742:39:18;;-1:-1:-1;;;;;1755:7:18;1765:4;1771:9;1742:4;:39::i;:::-;1791:14;;-1:-1:-1;;;1791:14:18;;-1:-1:-1;;;;;4902:32:19;;1791:14:18;;;4884:51:19;1791:8:18;;;;4857:18:19;;1791:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1815:7:18;;:35;;-1:-1:-1;;;1815:35:18;;-1:-1:-1;;;;;1815:7:18;;;;-1:-1:-1;1815:15:18;;-1:-1:-1;1815:35:18;;1831:8;;1841;;1815:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1869:7:18;;:33;;-1:-1:-1;;;1869:33:18;;-1:-1:-1;;;;;7089:15:19;;;1869:33:18;;;7071:34:19;7141:15;;;7121:18;;;7114:43;1860:53:18;;1869:7;;:17;;7006:18:19;;1869:33:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1904:8;1860;:53::i;:::-;1932:18;;-1:-1:-1;;;1932:18:18;;-1:-1:-1;;;;;4902:32:19;;1932:18:18;;;4884:51:19;1932:8:18;;;;4857:18:19;;1932::18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1960:7:18;;:45;;-1:-1:-1;;;1960:45:18;;-1:-1:-1;;;;;7452:15:19;;;1960:45:18;;;7434:34:19;7504:15;;;7484:18;;;7477:43;1997:7:18;7536:18:19;;;7529:34;1960:7:18;;;;-1:-1:-1;1960:20:18;;-1:-1:-1;7369:18:19;;1960:45:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2025:7:18;;:23;;-1:-1:-1;;;2025:23:18;;-1:-1:-1;;;;;4902:32:19;;;2025:23:18;;;4884:51:19;2016:43:18;;2025:7;;:17;;4857:18:19;;2025:23:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:8;2016;:43::i;:::-;2078:7;;:27;;-1:-1:-1;;;2078:27:18;;-1:-1:-1;;;;;4902:32:19;;;2078:27:18;;;4884:51:19;2069:46:18;;2078:7;;:17;;4857:18:19;;2078:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2107:7;2069:8;:46::i;:::-;2134:7;;:23;;-1:-1:-1;;;2134:23:18;;-1:-1:-1;;;;;4902:32:19;;;2134:23:18;;;4884:51:19;2125:42:18;;2134:7;;:17;;4857:18:19;;2134:23:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2159:7;2125:8;:42::i;:::-;1600:574;;;1565:609::o;393:92::-;445:7;;:29;;-1:-1:-1;;;445:29:18;;:7;:29;;;4884:51:19;436:42:18;;-1:-1:-1;;;;;445:7:18;;:17;;4857:18:19;;445:29:18;4738:203:19;2447:178:6;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;955:406:18;997:12;1012:16;;;;;;;;;;;;;;-1:-1:-1;;;1012:16:18;;;:8;:16::i;:::-;997:31;;1038:13;1054:17;;;;;;;;;;;;;;-1:-1:-1;;;1054:17:18;;;:8;:17::i;:::-;1095:7;;1038:33;;-1:-1:-1;1082:38:18;;-1:-1:-1;;;;;1095:7:18;1105:4;1111:8;1082:4;:38::i;:::-;1139:7;;:23;;-1:-1:-1;;;1139:23:18;;-1:-1:-1;;;;;4902:32:19;;;1139:23:18;;;4884:51:19;1130:43:18;;1139:7;;:17;;4857:18:19;;1139:23:18;4738:203:19;1130:43:18;1184:14;;-1:-1:-1;;;1184:14:18;;-1:-1:-1;;;;;4902:32:19;;1184:14:18;;;4884:51:19;1184:8:18;;;;4857:18:19;;1184:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1208:7:18;;:32;;-1:-1:-1;;;1208:32:18;;-1:-1:-1;;;;;1208:7:18;;;;-1:-1:-1;1208:16:18;;-1:-1:-1;1208:32:18;;1225:5;;1232:7;;1208:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1268:7:18;;:23;;-1:-1:-1;;;1268:23:18;;-1:-1:-1;;;;;4902:32:19;;;1268:23:18;;;4884:51:19;1259:42:18;;1268:7;;:17;;4857:18:19;;1268:23:18;4738:203:19;1259:42:18;1320:7;;:24;;-1:-1:-1;;;1320:24:18;;-1:-1:-1;;;;;4902:32:19;;;1320:24:18;;;4884:51:19;1311:43:18;;1320:7;;:17;;4857:18:19;;1320:24:18;4738:203:19;1311:43:18;987:374;;955:406::o;1367:192::-;1410:15;1428:19;;;;;;;;;;;;;;-1:-1:-1;;;1428:19:18;;;:8;:19::i;:::-;1410:37;;1457:15;1475:19;;;;;;;;;;;;;;-1:-1:-1;;;1475:19:18;;;:8;:19::i;:::-;1513:7;;:35;;-1:-1:-1;;;1513:35:18;;-1:-1:-1;;;;;7089:15:19;;;1513:35:18;;;7071:34:19;7141:15;;;7121:18;;;7114:43;1457:37:18;;-1:-1:-1;1504:48:18;;1513:7;;;;:17;;7006:18:19;;1513:35:18;6859:304:19;1866:141:6;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;2023:20;;1671:64;;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;754:195:18:-;792:11;806:15;;;;;;;;;;;;;;-1:-1:-1;;;806:15:18;;;:8;:15::i;:::-;831:7;;:28;;-1:-1:-1;;;831:28:18;;792:29;;-1:-1:-1;;;;;;831:7:18;;:12;;:28;;792:29;;849:9;;831:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;869:7:18;;:28;;-1:-1:-1;;;869:28:18;;-1:-1:-1;;;;;869:7:18;;;;-1:-1:-1;869:12:18;;-1:-1:-1;869:28:18;;882:3;;887:9;;869:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;916:7:18;;:22;;-1:-1:-1;;;916:22:18;;-1:-1:-1;;;;;4902:32:19;;;916:22:18;;;4884:51:19;907:35:18;;-1:-1:-1;916:7:18;;;;-1:-1:-1;916:17:18;;4857:18:19;;916:22:18;4738:203:19;491:86:18;545:7;;:21;;;-1:-1:-1;;;545:21:18;;;;536:34;;-1:-1:-1;;;;;545:7:18;;:19;;:21;;;;;;;;;;;;;;:7;:21;;;;;;;;;;;;;;2013:142:6;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;15314:125:4:-;15378:12;15412:20;15427:4;15412:14;:20::i;:::-;-1:-1:-1;15402:30:4;15314:125;-1:-1:-1;;15314:125:4:o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;9426:2:19;9408:21;;;9465:2;9445:18;;;9438:30;9504:34;9499:2;9484:18;;9477:62;-1:-1:-1;;;9570:2:19;9555:18;;9548:32;9612:3;9597:19;;9224:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;14695:344::-;14831:1;14814:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14804:30;;;;;;14797:1;14780:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14770:30;;;;;;:64;14766:267;;14855:43;;;;;11157:2:19;11139:21;;;11196:2;11176:18;;;11169:30;11235:34;11230:2;11215:18;;11208:62;-1:-1:-1;;;11301:2:19;11286:18;;11279:34;11345:3;11330:19;;10955:400;14855:43:0;;;;;;;;14917:33;14948:1;14917:33;;;;;;:::i;:::-;;;;;;;;14969;15000:1;14969:33;;;;;;:::i;20040:117:4:-;20122:28;20127:5;20134:2;20138:4;20144:5;20122:4;:28::i;15033:242::-;15103:12;15117:18;15195:4;15178:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15178:22:4;;;;;;;15168:33;;15178:22;15168:33;;;;-1:-1:-1;;;;;;15219:19:4;;;;;12396:25:19;;;15168:33:4;-1:-1:-1;15219:7:4;;;;12369:18:19;;15219:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15248:20;;-1:-1:-1;;;15248:20:4;;15212:26;;-1:-1:-1;15248:8:4;;;;:20;;15212:26;;15263:4;;15248:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15033:242;;;:::o;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;2489:11;;1671:64;;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:0;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;20436:825:4:-;20600:38;;;-1:-1:-1;;;;;4902:32:19;;;20600:38:4;;;;4884:51:19;;;;20600:38:4;;;;;;;;;;4857:18:19;;;;20600:38:4;;;;;;;-1:-1:-1;;;;;20600:38:4;-1:-1:-1;;;20600:38:4;;;20589:50;;20565:20;;20589:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20562:77;;;20649:15;20678:7;20667:30;;;;;;;;;;;;:::i;:::-;20649:48;-1:-1:-1;20734:71:4;20800:4;20734:51;20782:2;20734:38;-1:-1:-1;;;20734:22:4;:8;20750:5;20734:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;20851:6;20847:408;;;20914:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20914:34:4;-1:-1:-1;;;20914:34:4;;;20903:46;;20876:23;;-1:-1:-1;;;;;20903:10:4;;;:46;;20914:34;20903:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20873:76;;;20963:14;20991:10;20980:33;;;;;;;;;;;;:::i;:::-;20963:50;;21038:7;21031:4;:14;21027:144;;;21076:14;21086:4;21076:7;:14;:::i;:::-;21065:26;;;;:::i;:::-;;;21027:144;;;21141:14;21148:7;21141:4;:14;:::i;:::-;21130:26;;;;:::i;:::-;;;21027:144;21184:60;21237:6;21184:38;-1:-1:-1;;;21184:22:4;:8;21200:5;21184:15;:22::i;:60::-;20859:396;;20847:408;20521:740;;20436:825;;;;:::o;7700:156:9:-;4573:12;;;:22;;-1:-1:-1;;;;;;4573:22:9;-1:-1:-1;;;;;4573:22:9;;;;;-1:-1:-1;4573:12:9;7813:36;7806:43;;7700:156;;;;;:::o;7862:143::-;4728:9;;;:16;;-1:-1:-1;;4728:16:9;;;;;;;;-1:-1:-1;4728:9:9;7968:30;4629:143;8167:152;5044:10;;;:47;;;;;;;8241:18;5044:47;;;;;;-1:-1:-1;;;;;5068:21:9;;5044:47;;;8302:4;8278:34;4940:179;8943:120;9023:33;9037:4;9051:3;9391:12;;;;9427:9;;;;9468:11;;;;9512:10;;;9489:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9391:12:9;;;;9427:9;;;;;;9377:11;;9489:33;;9512:10;;9489:33;;9512:10;9489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9533:17;9570:4;9576:12;9584:3;9576:7;:12::i;:::-;9553:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9553:36:9;;;;;;;;;-1:-1:-1;;;;;9604:15:9;;;;;;:10;;;9553:36;9604:15;;;;;;-1:-1:-1;;;;;;9604:21:9;;;;;;;;;9553:36;;-1:-1:-1;9604:21:9;;:15;;9636:34;;9653:3;;9658:11;;9636:34;;:::i;:::-;;;;-1:-1:-1;;9636:34:9;;;;;;;;;9626:45;;9636:34;9626:45;;;;9604:68;;;;;;;;;;-1:-1:-1;9604:68:9;;;;9599:110;;9688:10;9693:4;9688;:10::i;:::-;;9599:110;-1:-1:-1;;;;;9741:15:9;;9718:12;9741:15;;;;;;;;;;;-1:-1:-1;;;;;;9741:21:9;;;;;;;;;9773:34;;9741:21;;9718:12;;9773:34;;9790:3;;9795:11;;9773:34;;:::i;:::-;;;;;;;;;;;;;9763:45;;;;;;9741:68;;;;;;;;;;;;9733:77;;9718:92;;9821:12;9860:17;9881:3;-1:-1:-1;;;;;9881:14:9;9896:4;9881:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9857:44:9;-1:-1:-1;9922:38:9;;-1:-1:-1;9857:44:9;9943:16;9948:11;9943:2;:16;:::i;:::-;9922:14;:38::i;:::-;9995:18;;-1:-1:-1;;;9995:18:9;;9915:45;;-1:-1:-1;9980:12:9;;-1:-1:-1;9995:7:9;;;;:18;;10003:3;;10008:4;;9995:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9980:33;;10036:4;10028;:12;10024:218;;10056:175;;-1:-1:-1;;;10056:175:9;;;;;;;:::i;:::-;;;;;;;;;10251:24;;-1:-1:-1;;;10251:24:9;;:8;;;;:24;;10260:3;;10265:4;;10271:3;;10251:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10292:12:9;;;10285:19;;-1:-1:-1;;;;;;10285:19:9;;;-1:-1:-1;10321:9:9;;;10314:16;;-1:-1:-1;;10314:16:9;;;10340:17;-1:-1:-1;10347:10:9;;10292:12;10340:17;:::i;:::-;10374:4;:11;;10367:18;;;9367:1025;;;;;;;;9297:1095;;:::o;11471:393::-;11530:12;11554:19;11586:1;:8;11597:2;11586:13;;;;:::i;:::-;11576:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11576:24:9;;11554:46;;11615:9;11610:224;11634:1;:8;11630:1;:12;11610:224;;;11663:9;11675:1;11677;11675:4;;;;;;;;:::i;:::-;;;;;;;11663:16;;11808:1;11802;11798:2;11794:10;11790:2;11786:19;11778:6;11774:32;11767:43;11749:75;11644:3;;;;;:::i;:::-;;;;11610:224;;7579:115;7636:7;7662:25;7682:4;7662:19;:25::i;11110:304::-;11188:7;11207:11;11229;11254:2;11243:1;:8;:13;:29;;11264:1;:8;11243:29;;;11259:2;11243:29;11229:43;;11287:9;11282:106;11306:3;11302:1;:7;11282:106;;;11371:5;:1;11375;11371:5;:::i;:::-;11345:1;11347:10;11356:1;11347:6;:10;:::i;:::-;11345:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;11345:13:9;11337:40;;11330:47;;;;;11311:3;;;;:::i;:::-;;;;11282:106;;;-1:-1:-1;11404:3:9;;11110:304;-1:-1:-1;;;;11110:304:9:o;1264:3197::-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:9;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:9;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:9;:15;;-1:-1:-1;1568:34:9;;-1:-1:-1;1452:33:9;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:9;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:9;;;;1532:174;;;-1:-1:-1;;;;;1627:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:9;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3197;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;1781:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:9;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:9;-1:-1:-1;1903:38:9;;-1:-1:-1;1838:44:9;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:9;;-1:-1:-1;;;;;4902:32:19;;1990:25:9;;;4884:51:19;1896:45:9;;-1:-1:-1;1963:22:9;;-1:-1:-1;1990:11:9;;;;4857:18:19;;1990:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:9;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2060;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;2077:7:9;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:9;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;2186:17;;2160:44;;;;;;;:::i;:::-;;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:9;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:9;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:9;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:9;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:9;;;:88;;;;-1:-1:-1;;;;;2690:15:9;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:9;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:9;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:9;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:9;:75;;-1:-1:-1;;2690:75:9;;;;;;;;;;-1:-1:-1;2025:2060:9;;;2801:1;2786:5;:12;:16;2782:1303;;;2823:9;2818:1152;2842:5;:12;2838:1;:16;2818:1152;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;2894:7:9;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:9;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;3011:17;;2985:44;;;;;;;:::i;:::-;;;;;;;;2934:114;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;3090:8:9;;3099:3;3104:5;3110:1;3104:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;3090:43:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:12;3181:17;3256:3;-1:-1:-1;;;;;3256:14:9;3271:4;3256:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:38:9;;-1:-1:-1;3238:38:9;-1:-1:-1;3305:38:9;3238;3326:16;3331:11;3326:2;:16;:::i;3305:38::-;3298:45;;3384:7;:37;;;;;-1:-1:-1;;;3395:4:9;:26;3384:37;3380:529;;;3519:86;3529:3;3534:4;3567:3;3572:11;3550:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3540:45;;;;;;3595:5;3601:1;3595:8;;;;;;;;:::i;:::-;;;;;;;3587:17;;3519:86;;;;;;;;;:::i;:::-;;;;;;;;3706:5;3712:1;3706:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3627:15:9;;3698:17;3627:15;;;;;;;;;;-1:-1:-1;;;;;;3627:21:9;;;;;;;;;3659:34;;3706:8;;3627:21;;3659:34;;3676:3;;3681:11;;3659:34;;:::i;:::-;;;;;;;;;;;;;3649:45;;;;;;3627:68;;;;;;;;;;;:88;;;;3808:4;3737;:10;;:15;3748:3;-1:-1:-1;;;;;3737:15:9;-1:-1:-1;;;;;3737:15:9;;;;;;;;;;;;:21;3753:4;-1:-1:-1;;;;;3737:21:9;;-1:-1:-1;;;;;3737:21:9;;;;;;;;;;;;;:68;3786:3;3791:11;3769:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:45;;;;;;3737:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;3834:8:9;;3843:3;3848:5;3854:1;3848:8;;;;;;;;:::i;:::-;;;;;;;3858:4;3834:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3885:5;;;;;3380:529;-1:-1:-1;;;;;;;;;;;580:37:9;;-1:-1:-1;;;;;3926:8:9;;3935:3;3940:5;3946:1;3940:8;;;;;;;;:::i;:::-;;;;;;;3950:4;3926:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1109;;;2856:3;;;;;:::i;:::-;;;;2818:1152;;;;2782:1303;;;4000:74;;;-1:-1:-1;;;4000:74:9;;17865:2:19;4000:74:9;;;17847:21:19;17884:18;;;17877:30;;;;17943:34;17923:18;;;17916:62;18014:34;17994:18;;;17987:62;18066:19;;4000:74:9;17663:428:19;2782:1303:9;-1:-1:-1;;;;;4116:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4116:21:9;;;;;;;;;4148:34;;4116:21;;:15;4148:34;;4165:3;;4170:11;;4148:34;;:::i;:::-;;;;-1:-1:-1;;4148:34:9;;;;;;;;;4138:45;;4148:34;4138:45;;;;4116:68;;;;;;;;;;-1:-1:-1;4116:68:9;;;;4095:162;;;;-1:-1:-1;;;4095:162:9;;18298:2:19;4095:162:9;;;18280:21:19;18337:2;18317:18;;;18310:30;18376:34;18356:18;;;18349:62;-1:-1:-1;;;18427:18:19;;;18420:45;18482:19;;4095:162:9;18096:411:19;4095:162:9;4275:12;;;4268:19;;-1:-1:-1;;;;;;4268:19:9;;;4304:9;;;4297:16;;-1:-1:-1;;4297:16:9;;;4323:17;-1:-1:-1;4330:10:9;;4275:12;4323:17;:::i;:::-;4350:18;4357:11;;;4350:18;;;-1:-1:-1;;;;;4386:15:9;;;;;;;;;;;;-1:-1:-1;;;;;;4386:21:9;;;;;;;;;4418:34;;4386:21;;4350:18;4418:34;;4435:3;;4440:11;;4418:34;;:::i;:::-;;;;;;;;;;;;;4408:45;;;;;;4386:68;;;;;;;;;;;;4379:75;;;;;;;;;1264:3197;;;:::o;6942:393::-;7001:12;7025:19;7057:1;:8;7068:2;7057:13;;;;:::i;:::-;7047:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7047:24:9;;7025:46;;7086:9;7081:224;7105:1;:8;7101:1;:12;7081:224;;;7134:9;7146:1;7148;7146:4;;;;;;;;:::i;:::-;;;;;;;7134:16;;7279:1;7273;7269:2;7265:10;7261:2;7257:19;7249:6;7245:32;7238:43;7220:75;7115:3;;;;;:::i;:::-;;;;7081:224;;6632:304;6710:7;6729:11;6751;6776:2;6765:1;:8;:13;:29;;6786:1;:8;6765:29;;;6781:2;6765:29;6751:43;;6809:9;6804:106;6828:3;6824:1;:7;6804:106;;;6893:5;:1;6897;6893:5;:::i;:::-;6867:1;6869:10;6878:1;6869:6;:10;:::i;:::-;6867:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;6867:13:9;6859:40;;6852:47;;;;;6833:3;;;;:::i;:::-;;;;6804:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:19:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:19;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:19;;14:658;-1:-1:-1;;;;;;14:658:19:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:19;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:19;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:19;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:19;;;;2130:5;-1:-1:-1;;;2158:15:19;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:19;;677:1567;-1:-1:-1;;;;;;;;;677:1567:19:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:19;2473:16;;2466:27;2249:250::o;2504:271::-;2546:3;2584:5;2578:12;2611:6;2606:3;2599:19;2627:76;2696:6;2689:4;2684:3;2680:14;2673:4;2666:5;2662:16;2627:76;:::i;:::-;2757:2;2736:15;-1:-1:-1;;2732:29:19;2723:39;;;;2764:4;2719:50;;2504:271;-1:-1:-1;;2504:271:19:o;2780:803::-;2942:4;2971:2;3011;3000:9;2996:18;3041:2;3030:9;3023:21;3064:6;3099;3093:13;3130:6;3122;3115:22;3168:2;3157:9;3153:18;3146:25;;3230:2;3220:6;3217:1;3213:14;3202:9;3198:30;3194:39;3180:53;;3268:2;3260:6;3256:15;3289:1;3299:255;3313:6;3310:1;3307:13;3299:255;;;3406:2;3402:7;3390:9;3382:6;3378:22;3374:36;3369:3;3362:49;3434:40;3467:6;3458;3452:13;3434:40;:::i;:::-;3424:50;-1:-1:-1;3532:12:19;;;;3497:15;;;;3335:1;3328:9;3299:255;;;-1:-1:-1;3571:6:19;;2780:803;-1:-1:-1;;;;;;;2780:803:19:o;4431:302::-;-1:-1:-1;;;;;4651:32:19;;;;4633:51;;4715:2;4700:18;;4693:34;4621:2;4606:18;;4431:302::o;4946:184::-;5016:6;5069:2;5057:9;5048:7;5044:23;5040:32;5037:52;;;5085:1;5082;5075:12;5037:52;-1:-1:-1;5108:16:19;;4946:184;-1:-1:-1;4946:184:19:o;5135:127::-;5196:10;5191:3;5187:20;5184:1;5177:31;5227:4;5224:1;5217:15;5251:4;5248:1;5241:15;5267:275;5338:2;5332:9;5403:2;5384:13;;-1:-1:-1;;5380:27:19;5368:40;;5438:18;5423:34;;5459:22;;;5420:62;5417:88;;;5485:18;;:::i;:::-;5521:2;5514:22;5267:275;;-1:-1:-1;5267:275:19:o;5547:719::-;5627:6;5680:2;5668:9;5659:7;5655:23;5651:32;5648:52;;;5696:1;5693;5686:12;5648:52;5729:9;5723:16;5758:18;5799:2;5791:6;5788:14;5785:34;;;5815:1;5812;5805:12;5785:34;5853:6;5842:9;5838:22;5828:32;;5898:7;5891:4;5887:2;5883:13;5879:27;5869:55;;5920:1;5917;5910:12;5869:55;5949:2;5943:9;5971:2;5967;5964:10;5961:36;;;5977:18;;:::i;:::-;6019:53;6062:2;6043:13;;-1:-1:-1;;6039:27:19;6068:2;6035:36;6019:53;:::i;:::-;6006:66;;6095:2;6088:5;6081:17;6135:7;6130:2;6125;6121;6117:11;6113:20;6110:33;6107:53;;;6156:1;6153;6146:12;6107:53;6169:67;6233:2;6228;6221:5;6217:14;6212:2;6208;6204:11;6169:67;:::i;:::-;-1:-1:-1;6255:5:19;5547:719;-1:-1:-1;;;;5547:719:19:o;6577:277::-;6644:6;6697:2;6685:9;6676:7;6672:23;6668:32;6665:52;;;6713:1;6710;6703:12;6665:52;6745:9;6739:16;6798:5;6791:13;6784:21;6777:5;6774:32;6764:60;;6820:1;6817;6810:12;6764:60;6843:5;6577:277;-1:-1:-1;;;6577:277:19:o;7574:380::-;7653:1;7649:12;;;;7696;;;7717:61;;7771:4;7763:6;7759:17;7749:27;;7717:61;7824:2;7816:6;7813:14;7793:18;7790:38;7787:161;;7870:10;7865:3;7861:20;7858:1;7851:31;7905:4;7902:1;7895:15;7933:4;7930:1;7923:15;7787:161;;7574:380;;;:::o;8543:384::-;-1:-1:-1;;;;;;8728:33:19;;8716:46;;8785:13;;8698:3;;8807:74;8785:13;8870:1;8861:11;;8854:4;8842:17;;8807:74;:::i;:::-;8901:16;;;;8919:1;8897:24;;8543:384;-1:-1:-1;;;8543:384:19:o;8932:287::-;9061:3;9099:6;9093:13;9115:66;9174:6;9169:3;9162:4;9154:6;9150:17;9115:66;:::i;:::-;9197:16;;;;;8932:287;-1:-1:-1;;8932:287:19:o;9791:348::-;10021:2;10010:9;10003:21;9984:4;10041:49;10086:2;10075:9;10071:18;9704:2;9692:15;;-1:-1:-1;;;9732:4:19;9723:14;;9716:36;9777:2;9768:12;;9627:159;10041:49;10033:57;;10126:6;10121:2;10110:9;10106:18;10099:34;9791:348;;;;:::o;10308:::-;10538:2;10527:9;10520:21;10501:4;10558:49;10603:2;10592:9;10588:18;10221:2;10209:15;;-1:-1:-1;;;10249:4:19;10240:14;;10233:36;10294:2;10285:12;;10144:159;11360:440;11610:2;11599:9;11592:21;11573:4;11636:49;11681:2;11670:9;11666:18;9704:2;9692:15;;-1:-1:-1;;;9732:4:19;9723:14;;9716:36;9777:2;9768:12;;9627:159;11636:49;11733:9;11725:6;11721:22;11716:2;11705:9;11701:18;11694:50;11761:33;11787:6;11779;11761:33;:::i;:::-;11753:41;11360:440;-1:-1:-1;;;;11360:440:19:o;11805:::-;12055:2;12044:9;12037:21;12018:4;12081:49;12126:2;12115:9;12111:18;10221:2;10209:15;;-1:-1:-1;;;10249:4:19;10240:14;;10233:36;10294:2;10285:12;;10144:159;12432:290;12502:6;12555:2;12543:9;12534:7;12530:23;12526:32;12523:52;;;12571:1;12568;12561:12;12523:52;12597:16;;-1:-1:-1;;;;;12642:31:19;;12632:42;;12622:70;;12688:1;12685;12678:12;12727:317;-1:-1:-1;;;;;12904:32:19;;12886:51;;12973:2;12968;12953:18;;12946:30;;;-1:-1:-1;;12993:45:19;;13019:18;;13011:6;12993:45;:::i;13049:345::-;-1:-1:-1;;;;;13269:32:19;;;;13251:51;;13333:2;13318:18;;13311:34;;;;13376:2;13361:18;;13354:34;13239:2;13224:18;;13049:345::o;13399:127::-;13460:10;13455:3;13451:20;13448:1;13441:31;13491:4;13488:1;13481:15;13515:4;13512:1;13505:15;13531:128;13598:9;;;13619:11;;;13616:37;;;13633:18;;:::i;13664:125::-;13729:9;;;13750:10;;;13747:36;;;13763:18;;:::i;13794:610::-;14040:13;;13983:3;;14014;;14093:4;14120:15;;;13983:3;14163:175;14177:6;14174:1;14171:13;14163:175;;;14240:13;;14226:28;;14276:14;;;;14313:15;;;;14199:1;14192:9;14163:175;;;-1:-1:-1;;14347:21:19;;;-1:-1:-1;14384:14:19;;;;;-1:-1:-1;;;13794:610:19:o;14409:168::-;14482:9;;;14513;;14530:15;;;14524:22;;14510:37;14500:71;;14551:18;;:::i;14771:556::-;14973:2;14955:21;;;15012:3;14992:18;;;14985:31;15052:34;15047:2;15032:18;;15025:62;15123:34;15118:2;15103:18;;15096:62;15195:34;15189:3;15174:19;;15167:63;-1:-1:-1;;;15261:3:19;15246:19;;15239:46;15317:3;15302:19;;14771:556::o;15332:127::-;15393:10;15388:3;15384:20;15381:1;15374:31;15424:4;15421:1;15414:15;15448:4;15445:1;15438:15;15464:135;15503:3;15524:17;;;15521:43;;15544:18;;:::i;:::-;-1:-1:-1;15591:1:19;15580:13;;15464:135::o;15604:709::-;15669:5;15722:3;15715:4;15707:6;15703:17;15699:27;15689:55;;15740:1;15737;15730:12;15689:55;15769:6;15763:13;15795:4;15818:18;15814:2;15811:26;15808:52;;;15840:18;;:::i;:::-;15886:2;15883:1;15879:10;15909:28;15933:2;15929;15925:11;15909:28;:::i;:::-;15971:15;;;16041;;;16037:24;;;16002:12;;;;16073:15;;;16070:35;;;16101:1;16098;16091:12;16070:35;16137:2;16129:6;16125:15;16114:26;;16149:135;16165:6;16160:3;16157:15;16149:135;;;16231:10;;16219:23;;16182:12;;;;16262;;;;16149:135;;;16302:5;15604:709;-1:-1:-1;;;;;;;15604:709:19:o;16318:614::-;16447:6;16455;16508:2;16496:9;16487:7;16483:23;16479:32;16476:52;;;16524:1;16521;16514:12;16476:52;16557:9;16551:16;16586:18;16627:2;16619:6;16616:14;16613:34;;;16643:1;16640;16633:12;16613:34;16666:72;16730:7;16721:6;16710:9;16706:22;16666:72;:::i;:::-;16656:82;;16784:2;16773:9;16769:18;16763:25;16747:41;;16813:2;16803:8;16800:16;16797:36;;;16829:1;16826;16819:12;16797:36;;16852:74;16918:7;16907:8;16896:9;16892:24;16852:74;:::i;:::-;16842:84;;;16318:614;;;;;:::o;17216:442::-;-1:-1:-1;;;;;17463:32:19;;;;17445:51;;-1:-1:-1;;;;;;17532:33:19;;;;17527:2;17512:18;;17505:61;17597:2;17582:18;;17575:34;17640:2;17625:18;;17618:34;17432:3;17417:19;;17216:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_allowance()": "9ce22fd8",
    "test_balanceOf()": "586c0b42",
    "test_burn()": "bec385ec",
    "test_mint()": "1e2fc4f7",
    "test_name()": "2b687ef6",
    "test_totalSupply()": "cdcfea7f",
    "test_transfer()": "9c45706d",
    "test_trasferFrom()": "4023894b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_allowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_balanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_name\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_totalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_trasferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ERC20.t.sol\":\"ERC20Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/ERC20.sol\":{\"keccak256\":\"0xa6cb6f7ab279f249a2ce56bde5ec7ee7d04d4b4e01e2d9227cdd3839bf280b0a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a272e11033a5f63731549205854c87bcc4fd3c1dc49466f376cc8cca78254e48\",\"dweb:/ipfs/QmYKN5mzqhCE1T9u3Ayh2Ck8p8ZhxFH72HfFZFWREq6bPZ\"]},\"test/ERC20.t.sol\":{\"keccak256\":\"0x52ab35cfba71a0819772932bd687bc64a409912badc4db634c20a4e5bd8776e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://12f79ac0886c2743cc4b043867ce8f7bdb516f8de0d786e0b87380dbbe1cc889\",\"dweb:/ipfs/QmYzWsFVBcA4bDZ5T5T8VwcThvEY2Nq9rrHnfBZxh2QbFt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_allowance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_balanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_mint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_name"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_totalSupply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_transfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_trasferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ERC20.t.sol": "ERC20Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/ERC20.sol": {
        "keccak256": "0xa6cb6f7ab279f249a2ce56bde5ec7ee7d04d4b4e01e2d9227cdd3839bf280b0a",
        "urls": [
          "bzz-raw://a272e11033a5f63731549205854c87bcc4fd3c1dc49466f376cc8cca78254e48",
          "dweb:/ipfs/QmYKN5mzqhCE1T9u3Ayh2Ck8p8ZhxFH72HfFZFWREq6bPZ"
        ],
        "license": "UNLICENSED"
      },
      "test/ERC20.t.sol": {
        "keccak256": "0x52ab35cfba71a0819772932bd687bc64a409912badc4db634c20a4e5bd8776e8",
        "urls": [
          "bzz-raw://12f79ac0886c2743cc4b043867ce8f7bdb516f8de0d786e0b87380dbbe1cc889",
          "dweb:/ipfs/QmYzWsFVBcA4bDZ5T5T8VwcThvEY2Nq9rrHnfBZxh2QbFt"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ERC20.t.sol",
    "id": 28912,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        28613
      ],
      "ERC20Test": [
        28911
      ],
      "StdAssertions": [
        3260
      ],
      "StdChains": [
        3954
      ],
      "StdCheats": [
        6205
      ],
      "StdInvariant": [
        6495
      ],
      "StdStorage": [
        7245
      ],
      "StdStyle": [
        9889
      ],
      "StdUtils": [
        10696
      ],
      "Test": [
        10745
      ],
      "TestBase": [
        1846
      ],
      "Vm": [
        12065
      ],
      "console": [
        20129
      ],
      "console2": [
        28225
      ],
      "stdError": [
        6271
      ],
      "stdJson": [
        7071
      ],
      "stdMath": [
        7213
      ],
      "stdStorage": [
        8678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2138:18",
    "nodes": [
      {
        "id": 28615,
        "nodeType": "PragmaDirective",
        "src": "39:23:18",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 28616,
        "nodeType": "ImportDirective",
        "src": "64:28:18",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28912,
        "sourceUnit": 10746,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28617,
        "nodeType": "ImportDirective",
        "src": "93:31:18",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28912,
        "sourceUnit": 20130,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28619,
        "nodeType": "ImportDirective",
        "src": "126:39:18",
        "nodes": [],
        "absolutePath": "src/ERC20.sol",
        "file": "../src/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28912,
        "sourceUnit": 28614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28618,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28613,
              "src": "134:5:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28911,
        "nodeType": "ContractDefinition",
        "src": "167:2009:18",
        "nodes": [
          {
            "id": 28624,
            "nodeType": "VariableDeclaration",
            "src": "200:13:18",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "myToken",
            "nameLocation": "206:7:18",
            "scope": 28911,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$28613",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 28623,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28622,
                "name": "ERC20",
                "nameLocations": [
                  "200:5:18"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28613,
                "src": "200:5:18"
              },
              "referencedDeclaration": 28613,
              "src": "200:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$28613",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28638,
            "nodeType": "FunctionDefinition",
            "src": "219:82:18",
            "nodes": [],
            "body": {
              "id": 28637,
              "nodeType": "Block",
              "src": "243:58:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28627,
                      "name": "myToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28624,
                      "src": "253:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$28613",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6d79546f6b656e",
                          "id": 28631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "273:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_30010adb1c6ecbc2cca7b6f692a90461a290b3928991b232a7b783f48bcb9467",
                            "typeString": "literal_string \"myToken\""
                          },
                          "value": "myToken"
                        },
                        {
                          "hexValue": "544b4e",
                          "id": 28632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "284:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                            "typeString": "literal_string \"TKN\""
                          },
                          "value": "TKN"
                        },
                        {
                          "hexValue": "3138",
                          "id": 28633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "291:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_30010adb1c6ecbc2cca7b6f692a90461a290b3928991b232a7b783f48bcb9467",
                            "typeString": "literal_string \"myToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                            "typeString": "literal_string \"TKN\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 28630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "263:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20_$28613_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 28629,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 28628,
                            "name": "ERC20",
                            "nameLocations": [
                              "267:5:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28613,
                            "src": "267:5:18"
                          },
                          "referencedDeclaration": 28613,
                          "src": "267:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$28613",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 28634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "263:31:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$28613",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "253:41:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$28613",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 28636,
                  "nodeType": "ExpressionStatement",
                  "src": "253:41:18"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "228:5:18",
            "parameters": {
              "id": 28625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:18"
            },
            "returnParameters": {
              "id": 28626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28649,
            "nodeType": "FunctionDefinition",
            "src": "307:80:18",
            "nodes": [],
            "body": {
              "id": 28648,
              "nodeType": "Block",
              "src": "335:52:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 28642,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "354:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "362:4:18",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28392,
                          "src": "354:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 28644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "354:14:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6d79546f6b656e",
                        "id": 28645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "370:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30010adb1c6ecbc2cca7b6f692a90461a290b3928991b232a7b783f48bcb9467",
                          "typeString": "literal_string \"myToken\""
                        },
                        "value": "myToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30010adb1c6ecbc2cca7b6f692a90461a290b3928991b232a7b783f48bcb9467",
                          "typeString": "literal_string \"myToken\""
                        }
                      ],
                      "id": 28641,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "345:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 28646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28647,
                  "nodeType": "ExpressionStatement",
                  "src": "345:35:18"
                }
              ]
            },
            "functionSelector": "2b687ef6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_name",
            "nameLocation": "316:9:18",
            "parameters": {
              "id": 28639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:18"
            },
            "returnParameters": {
              "id": 28640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28664,
            "nodeType": "FunctionDefinition",
            "src": "393:92:18",
            "nodes": [],
            "body": {
              "id": 28663,
              "nodeType": "Block",
              "src": "426:59:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 28657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "471:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 28656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "463:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 28655,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "463:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 28658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "463:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28653,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "445:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "453:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "445:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "445:29:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28652,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "436:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28662,
                  "nodeType": "ExpressionStatement",
                  "src": "436:42:18"
                }
              ]
            },
            "functionSelector": "586c0b42",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_balanceOf",
            "nameLocation": "402:14:18",
            "parameters": {
              "id": 28650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:2:18"
            },
            "returnParameters": {
              "id": 28651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28675,
            "nodeType": "FunctionDefinition",
            "src": "491:86:18",
            "nodes": [],
            "body": {
              "id": 28674,
              "nodeType": "Block",
              "src": "526:51:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 28668,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "545:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "553:11:18",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28398,
                          "src": "545:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 28670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "545:21:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "568:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28667,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "536:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28673,
                  "nodeType": "ExpressionStatement",
                  "src": "536:34:18"
                }
              ]
            },
            "functionSelector": "cdcfea7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_totalSupply",
            "nameLocation": "500:16:18",
            "parameters": {
              "id": 28665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:2:18"
            },
            "returnParameters": {
              "id": 28666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28700,
            "nodeType": "FunctionDefinition",
            "src": "583:165:18",
            "nodes": [],
            "body": {
              "id": 28699,
              "nodeType": "Block",
              "src": "611:137:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28679,
                      "mutability": "mutable",
                      "name": "bob",
                      "nameLocation": "629:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28699,
                      "src": "621:11:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28678,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "621:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28683,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "626f62",
                        "id": 28681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "644:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "id": 28680,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "635:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "621:29:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28687,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28679,
                        "src": "673:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 28688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "678:9:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28684,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "660:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "668:4:18",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28473,
                      "src": "660:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 28689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28690,
                  "nodeType": "ExpressionStatement",
                  "src": "660:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28694,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28679,
                            "src": "725:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28692,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "707:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "715:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "707:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "707:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 28696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:9:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 28691,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "698:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28698,
                  "nodeType": "ExpressionStatement",
                  "src": "698:43:18"
                }
              ]
            },
            "functionSelector": "1e2fc4f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mint",
            "nameLocation": "592:9:18",
            "parameters": {
              "id": 28676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:18"
            },
            "returnParameters": {
              "id": 28677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28732,
            "nodeType": "FunctionDefinition",
            "src": "754:195:18",
            "nodes": [],
            "body": {
              "id": 28731,
              "nodeType": "Block",
              "src": "782:167:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28704,
                      "mutability": "mutable",
                      "name": "bob",
                      "nameLocation": "800:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28731,
                      "src": "792:11:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "792:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28708,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "626f62",
                        "id": 28706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "815:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "id": 28705,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "806:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "792:29:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28712,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28704,
                        "src": "844:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 28713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "849:9:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28709,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "831:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "839:4:18",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28473,
                      "src": "831:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 28714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28715,
                  "nodeType": "ExpressionStatement",
                  "src": "831:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28719,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28704,
                        "src": "882:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 28720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "887:9:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28716,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "869:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "877:4:18",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28500,
                      "src": "869:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 28721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28722,
                  "nodeType": "ExpressionStatement",
                  "src": "869:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28726,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28704,
                            "src": "934:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28724,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "916:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "924:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "916:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "940:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28723,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "907:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28730,
                  "nodeType": "ExpressionStatement",
                  "src": "907:35:18"
                }
              ]
            },
            "functionSelector": "bec385ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_burn",
            "nameLocation": "763:9:18",
            "parameters": {
              "id": 28701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:18"
            },
            "returnParameters": {
              "id": 28702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28794,
            "nodeType": "FunctionDefinition",
            "src": "955:406:18",
            "nodes": [],
            "body": {
              "id": 28793,
              "nodeType": "Block",
              "src": "987:374:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28736,
                      "mutability": "mutable",
                      "name": "john",
                      "nameLocation": "1005:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28793,
                      "src": "997:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28735,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "997:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28740,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6a6f686e",
                        "id": 28738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c4b7a6b4af91b44be8d9bb66d41e82589f01974702d3bf1d9b4407a55593c3c",
                          "typeString": "literal_string \"john\""
                        },
                        "value": "john"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9c4b7a6b4af91b44be8d9bb66d41e82589f01974702d3bf1d9b4407a55593c3c",
                          "typeString": "literal_string \"john\""
                        }
                      ],
                      "id": 28737,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1012:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:16:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "997:31:18"
                },
                {
                  "assignments": [
                    28742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28742,
                      "mutability": "mutable",
                      "name": "alice",
                      "nameLocation": "1046:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28793,
                      "src": "1038:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28741,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1038:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28746,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "616c696365",
                        "id": 28744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1063:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                          "typeString": "literal_string \"alice\""
                        },
                        "value": "alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                          "typeString": "literal_string \"alice\""
                        }
                      ],
                      "id": 28743,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1054:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1038:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28750,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1095:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 28749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1087:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1087:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1087:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28752,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28736,
                        "src": "1105:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 28753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1111:8:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 28747,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5814,
                        5831,
                        5954
                      ],
                      "referencedDeclaration": 5831,
                      "src": "1082:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 28754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28755,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:38:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28759,
                            "name": "john",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28736,
                            "src": "1157:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28757,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1139:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1147:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "1139:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1139:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 28761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:8:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 28756,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1130:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28763,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28767,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28736,
                        "src": "1193:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 28764,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1184:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1187:5:18",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1184:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 28768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:14:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28769,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:14:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28773,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28742,
                        "src": "1225:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 28774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28770,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "1208:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1216:8:18",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28543,
                      "src": "1208:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 28775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28776,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:32:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28780,
                            "name": "john",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28736,
                            "src": "1286:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28778,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1268:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1276:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "1268:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1268:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 28782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 28777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1259:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28784,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:42:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28788,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28742,
                            "src": "1338:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28786,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1320:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1328:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "1320:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1320:24:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 28790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1346:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 28785,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1311:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28792,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:43:18"
                }
              ]
            },
            "functionSelector": "9c45706d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_transfer",
            "nameLocation": "964:13:18",
            "parameters": {
              "id": 28733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:18"
            },
            "returnParameters": {
              "id": 28734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28819,
            "nodeType": "FunctionDefinition",
            "src": "1367:192:18",
            "nodes": [],
            "body": {
              "id": 28818,
              "nodeType": "Block",
              "src": "1400:159:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28798,
                      "mutability": "mutable",
                      "name": "satoshi",
                      "nameLocation": "1418:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28818,
                      "src": "1410:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28802,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7361746f736869",
                        "id": 28800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1437:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a5d713a613b7825aee66fdc9110f0da9cf6c71acd103b6f74ac5937ff385f1a",
                          "typeString": "literal_string \"satoshi\""
                        },
                        "value": "satoshi"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3a5d713a613b7825aee66fdc9110f0da9cf6c71acd103b6f74ac5937ff385f1a",
                          "typeString": "literal_string \"satoshi\""
                        }
                      ],
                      "id": 28799,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1428:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:37:18"
                },
                {
                  "assignments": [
                    28804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28804,
                      "mutability": "mutable",
                      "name": "vitalik",
                      "nameLocation": "1465:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28818,
                      "src": "1457:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28803,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1457:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28808,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "766974616c696b",
                        "id": 28806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1484:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af2caa1c2ca1d027f1ac823b529d0a67cd144264b2789fa2ea4d63a67c7103cc",
                          "typeString": "literal_string \"vitalik\""
                        },
                        "value": "vitalik"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_af2caa1c2ca1d027f1ac823b529d0a67cd144264b2789fa2ea4d63a67c7103cc",
                          "typeString": "literal_string \"vitalik\""
                        }
                      ],
                      "id": 28805,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1475:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1457:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28812,
                            "name": "satoshi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28798,
                            "src": "1531:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 28813,
                            "name": "vitalik",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28804,
                            "src": "1540:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28810,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1513:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1521:9:18",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28408,
                          "src": "1513:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 28814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1513:35:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28809,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1504:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28817,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:48:18"
                }
              ]
            },
            "functionSelector": "9ce22fd8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_allowance",
            "nameLocation": "1376:14:18",
            "parameters": {
              "id": 28795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:18"
            },
            "returnParameters": {
              "id": 28796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28910,
            "nodeType": "FunctionDefinition",
            "src": "1565:609:18",
            "nodes": [],
            "body": {
              "id": 28909,
              "nodeType": "Block",
              "src": "1600:574:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28823,
                      "mutability": "mutable",
                      "name": "ross",
                      "nameLocation": "1618:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28909,
                      "src": "1610:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28822,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1610:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28827,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "726f7373",
                        "id": 28825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_710566b13b77e06814ce520a58b35ee0b7f448c4ee51cf9f028459fd81e14039",
                          "typeString": "literal_string \"ross\""
                        },
                        "value": "ross"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_710566b13b77e06814ce520a58b35ee0b7f448c4ee51cf9f028459fd81e14039",
                          "typeString": "literal_string \"ross\""
                        }
                      ],
                      "id": 28824,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1625:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:16:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1610:31:18"
                },
                {
                  "assignments": [
                    28829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28829,
                      "mutability": "mutable",
                      "name": "chandler",
                      "nameLocation": "1659:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28909,
                      "src": "1651:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1651:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28833,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6368616e646c6572",
                        "id": 28831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1679:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_622bf691d53a92135d99ceba9c4a4c10ae25008fc7db0e5f792628a5f8c22c3e",
                          "typeString": "literal_string \"chandler\""
                        },
                        "value": "chandler"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_622bf691d53a92135d99ceba9c4a4c10ae25008fc7db0e5f792628a5f8c22c3e",
                          "typeString": "literal_string \"chandler\""
                        }
                      ],
                      "id": 28830,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1670:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1651:39:18"
                },
                {
                  "assignments": [
                    28835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28835,
                      "mutability": "mutable",
                      "name": "joey",
                      "nameLocation": "1708:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 28909,
                      "src": "1700:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28834,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1700:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28839,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6a6f6579",
                        "id": 28837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a441d2637ecdfaf7aaa6c074206fafc917cef768835a828e7240f996b59ccb6",
                          "typeString": "literal_string \"joey\""
                        },
                        "value": "joey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9a441d2637ecdfaf7aaa6c074206fafc917cef768835a828e7240f996b59ccb6",
                          "typeString": "literal_string \"joey\""
                        }
                      ],
                      "id": 28836,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "1715:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 28838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:16:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1700:31:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28843,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1755:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 28842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1747:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1747:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1747:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28845,
                        "name": "ross",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28823,
                        "src": "1765:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 28846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1771:9:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 28840,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5814,
                        5831,
                        5954
                      ],
                      "referencedDeclaration": 5831,
                      "src": "1742:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 28847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28848,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:39:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28852,
                        "name": "ross",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28823,
                        "src": "1800:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 28849,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1791:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1794:5:18",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1791:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 28853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:14:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28854,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:14:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28858,
                        "name": "chandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28829,
                        "src": "1831:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 28859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1841:8:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28855,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "1815:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1823:7:18",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28571,
                      "src": "1815:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 28860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28861,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:35:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28865,
                            "name": "ross",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28823,
                            "src": "1887:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 28866,
                            "name": "chandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28829,
                            "src": "1893:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28863,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "1869:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1877:9:18",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28408,
                          "src": "1869:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 28867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:33:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 28868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1904:8:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 28862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1860:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:53:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28870,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:53:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28874,
                        "name": "chandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28829,
                        "src": "1941:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 28871,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1932:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1935:5:18",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1932:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 28875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28876,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:18:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28880,
                        "name": "ross",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28823,
                        "src": "1981:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28881,
                        "name": "chandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28829,
                        "src": "1987:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 28882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1997:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28877,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28624,
                        "src": "1960:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28613",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1968:12:18",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28612,
                      "src": "1960:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 28883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28884,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:45:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28888,
                            "name": "ross",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28823,
                            "src": "2043:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28886,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "2025:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2033:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "2025:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2025:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3935",
                        "id": 28890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:8:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_95000000000000000000_by_1",
                          "typeString": "int_const 95000000000000000000"
                        },
                        "value": "95"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_95000000000000000000_by_1",
                          "typeString": "int_const 95000000000000000000"
                        }
                      ],
                      "id": 28885,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2016:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28892,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28896,
                            "name": "chandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28829,
                            "src": "2096:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28894,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "2078:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2086:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "2078:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2078:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 28898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 28893,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2069:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28900,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:46:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28904,
                            "name": "joey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28835,
                            "src": "2152:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28902,
                            "name": "myToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28624,
                            "src": "2134:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$28613",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 28903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2142:9:18",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28402,
                          "src": "2134:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2159:7:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28901,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2125:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28908,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:42:18"
                }
              ]
            },
            "functionSelector": "4023894b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_trasferFrom",
            "nameLocation": "1574:16:18",
            "parameters": {
              "id": 28820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:2:18"
            },
            "returnParameters": {
              "id": 28821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:18"
            },
            "scope": 28911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28620,
              "name": "Test",
              "nameLocations": [
                "189:4:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10745,
              "src": "189:4:18"
            },
            "id": 28621,
            "nodeType": "InheritanceSpecifier",
            "src": "189:4:18"
          }
        ],
        "canonicalName": "ERC20Test",
        "contractDependencies": [
          28613
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28911,
          10745,
          1846,
          1843,
          10696,
          6495,
          6205,
          5526,
          3954,
          3260,
          1786
        ],
        "name": "ERC20Test",
        "nameLocation": "176:9:18",
        "scope": 28912,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 18
}